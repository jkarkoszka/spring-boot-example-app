apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: spring-boot-example-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "2g"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - spring-boot-example.yourdomain.com
      secretName: spring-boot-example-yourdomain-com-ceritficate
  rules:
    - host: spring-boot-example.yourdomain.com
      http:
        paths:
          - backend:
              serviceName: spring-boot-example-service
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-example-service
  namespace: production
spec:
  selector:
    app: spring-boot-example
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-example-deployment
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spring-boot-example
  template:
    metadata:
      labels:
        app: spring-boot-example
    spec:
      containers:
        - name: spring-boot-example
          image: registry.ci.yourdomain.com/app/spring-boot-example:SPRING_BOOT_EXAMPLE_VERSION
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: registry-ci-yourdomain-com-credentials
